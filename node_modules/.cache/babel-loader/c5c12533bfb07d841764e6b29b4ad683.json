{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rival\\\\Documents\\\\code\\\\proyek frontend\\\\project\\\\src\\\\component\\\\uploads\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport BaseService from '../../services/baseService';\nimport API from '../../config/rest';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadFile = () => {\n  _s();\n\n  const [file, setFile] = useState('');\n  const [data, getFile] = useState({\n    path: \"\",\n    data: \"\"\n  });\n  const [progress, setProgress] = useState(0);\n  const el = useRef();\n\n  const handleChange = e => {\n    setProgress(0);\n    const file = e.target.files[0];\n    console.log(file);\n    setFile(file);\n  };\n\n  const uploadFile = () => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    BaseService.post(API.UPLOAD, formData, {\n      onUploadProgress: ProgressEvent => {\n        let progress = Math.round(ProgressEvent.loaded / ProgressEvent.total * 100) + '%';\n        setProgress(progress);\n      }\n    }).then(res => {\n      console.log(res);\n      getFile({\n        path: res.data.path,\n        data: res.data.data\n      });\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        name: \"file\",\n        accept: \"application/pdf\",\n        required: true,\n        ref: el,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadFile,\n        className: \"upbutton\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UploadFile, \"lR/CRFrl/mymMd9rVYmuzHNvDBc=\");\n\n_c = UploadFile;\nexport default UploadFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"sources":["C:/Users/rival/Documents/code/proyek frontend/project/src/component/uploads/index.js"],"names":["React","useRef","useState","BaseService","API","UploadFile","file","setFile","data","getFile","path","progress","setProgress","el","handleChange","e","target","files","console","log","uploadFile","formData","FormData","append","post","UPLOAD","onUploadProgress","ProgressEvent","Math","round","loaded","total","then","res","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAO,aAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE,EAAR;AAAYF,IAAAA,IAAI,EAAE;AAAlB,GAAD,CAAhC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAMW,EAAE,GAAGZ,MAAM,EAAjB;;AAEA,QAAMa,YAAY,GAAIC,CAAD,IAAO;AACxBH,IAAAA,WAAW,CAAC,CAAD,CAAX;AACA,UAAMN,IAAI,GAAGS,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GALD;;AAOA,QAAMc,UAAU,GAAG,MAAM;AACrB,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBjB,IAAxB;AAEAH,IAAAA,WAAW,CAACqB,IAAZ,CAAiBpB,GAAG,CAACqB,MAArB,EAA6BJ,QAA7B,EAAuC;AACnCK,MAAAA,gBAAgB,EAAGC,aAAD,IAAmB;AACjC,YAAIhB,QAAQ,GAAGiB,IAAI,CAACC,KAAL,CACXF,aAAa,CAACG,MAAd,GAAuBH,aAAa,CAACI,KAArC,GAA6C,GADlC,IACyC,GADxD;AAEAnB,QAAAA,WAAW,CAACD,QAAD,CAAX;AACH;AALkC,KAAvC,EAMGqB,IANH,CAMQC,GAAG,IAAI;AACXf,MAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACAxB,MAAAA,OAAO,CAAC;AACJC,QAAAA,IAAI,EAAEuB,GAAG,CAACzB,IAAJ,CAASE,IADX;AAEJF,QAAAA,IAAI,EAAEyB,GAAG,CAACzB,IAAJ,CAASA;AAFX,OAAD,CAAP;AAIH,KAZD,EAYG0B,KAZH,CAYSC,GAAG,IAAIjB,OAAO,CAACC,GAAR,CAAYgB,GAAZ,CAZhB;AAaH,GAjBD;;AAmBA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,MAAM,EAAC,iBAAhD;AAAkE,QAAA,QAAQ,MAA1E;AAA2E,QAAA,GAAG,EAAEtB,EAAhF;AAAoF,QAAA,QAAQ,EAAEC;AAA9F;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAEM,UAAjB;AAA6B,QAAA,SAAS,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA1CD;;GAAMf,U;;KAAAA,U;AA4CN,eAAeA,UAAf","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport BaseService from '../../services/baseService';\r\nimport API from '../../config/rest';\r\nimport './style.css'\r\n\r\nconst UploadFile = () => {\r\n    const [file, setFile] = useState('');\r\n    const [data, getFile] = useState({ path: \"\", data: \"\"});\r\n    const [progress, setProgress] = useState(0);\r\n    const el = useRef();\r\n\r\n    const handleChange = (e) => {\r\n        setProgress(0)\r\n        const file = e.target.files[0];\r\n        console.log(file);\r\n        setFile(file);\r\n    }\r\n\r\n    const uploadFile = () => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        BaseService.post(API.UPLOAD, formData, {\r\n            onUploadProgress: (ProgressEvent) => {\r\n                let progress = Math.round(\r\n                    ProgressEvent.loaded / ProgressEvent.total * 100) + '%';\r\n                setProgress(progress);\r\n            }\r\n        }).then(res => {\r\n            console.log(res);\r\n            getFile({\r\n                path: res.data.path,\r\n                data: res.data.data\r\n            })\r\n        }).catch(err => console.log(err))   \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"file-upload\">\r\n                <input type=\"file\" id=\"file\" name=\"file\" accept=\"application/pdf\" required ref={el} onChange={handleChange} />\r\n                <hr />\r\n                <button onClick={uploadFile} className=\"upbutton\">Upload</button>\r\n                <hr />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadFile;"]},"metadata":{},"sourceType":"module"}