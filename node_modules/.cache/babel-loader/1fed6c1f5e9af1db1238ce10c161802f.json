{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rival\\\\Documents\\\\code\\\\proyek frontend\\\\project\\\\src\\\\component\\\\uploads\\\\index.js\";\nimport React, { Component } from 'react';\nimport { uploads } from '../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UploadFile extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFile = this.selectFile.bind(this);\n    this.upload = this.upload.bind(this);\n    this.state = {\n      selectFile: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"\",\n      fileInfos: []\n    };\n  }\n\n  componentDidMount() {\n    uploads.getFiles().then(res => {\n      this.setState({\n        fileInfos: res.data\n      });\n    });\n  }\n\n  selectFile(event) {\n    this.setState({\n      selectedFile: event.target.files\n    });\n  }\n\n  upload() {\n    let currentFile = this.state.selectedFile[0];\n    this.setState({\n      progress: 0,\n      currentFile: currentFile\n    });\n    uploads.upload(currentFile, event => {\n      this.setState({\n        progress: Math.round(100 * event.loaded / event.total)\n      });\n    }).then(res => {\n      this.setState({\n        message: res.data.message\n      });\n      return uploads.getFiles();\n    }).then(files => {\n      this.setState({\n        fileInfos: files.data\n      });\n    }).catch(() => {\n      this.setState({\n        progress: 0,\n        message: \"Could not upload the file!\",\n        currentFile: undefined\n      });\n    });\n    this.setState({\n      selectedFile: undefined\n    });\n  }\n\n  render() {\n    const {\n      selectedFile,\n      currentFile,\n      progress,\n      message\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload PDF Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), currentFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar progress-bar-info progress-bar-striped\",\n          role: \"progressbar\",\n          \"aria-valuenow\": progress,\n          \"aria-valuemin\": \"0\",\n          \"aria-valuemax\": \"100\",\n          style: {\n            width: progress + \"%\"\n          },\n          children: [progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"btn btn-default\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          name: \"file\",\n          accept: \"application/pdf\",\n          required: true,\n          onChange: this.selectFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        disabled: !selectedFile,\n        onClick: this.upload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-light\",\n        role: \"alert\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/rival/Documents/code/proyek frontend/project/src/component/uploads/index.js"],"names":["React","Component","uploads","UploadFile","constructor","props","selectFile","bind","upload","state","undefined","currentFile","progress","message","fileInfos","componentDidMount","getFiles","then","res","setState","data","event","selectedFile","target","files","Math","round","loaded","total","catch","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { uploads } from '../../services';\r\n\r\nexport default class UploadFile extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.selectFile = this.selectFile.bind(this);\r\n        this.upload = this.upload.bind(this);\r\n\r\n        this.state = {\r\n            selectFile: undefined,\r\n            currentFile: undefined,\r\n            progress: 0,\r\n            message: \"\",\r\n\r\n            fileInfos: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        uploads.getFiles().then((res) => {\r\n            this.setState({\r\n                fileInfos: res.data,\r\n            });\r\n        });\r\n    }\r\n\r\n    selectFile(event) {\r\n        this.setState({\r\n            selectedFile: event.target.files,\r\n        });\r\n    }\r\n\r\n    upload() {\r\n        let currentFile = this.state.selectedFile[0];\r\n\r\n        this.setState({\r\n            progress: 0,\r\n            currentFile: currentFile,\r\n        });\r\n\r\n        uploads.upload(currentFile, (event) => {\r\n            this.setState({\r\n                progress: Math.round((100 * event.loaded) / event.total),\r\n            });\r\n        })\r\n        .then((res) => {\r\n            this.setState({\r\n                message: res.data.message,\r\n            });\r\n            return uploads.getFiles();\r\n        })\r\n        .then((files) => {\r\n            this.setState({\r\n                fileInfos: files.data,\r\n            });\r\n        })\r\n        .catch(() => {\r\n            this.setState({\r\n                progress: 0,\r\n                message: \"Could not upload the file!\",\r\n                currentFile: undefined,\r\n            });\r\n        });\r\n\r\n        this.setState({\r\n            selectedFile: undefined,\r\n        });\r\n    }\r\n    render() {\r\n        const {\r\n            selectedFile,\r\n            currentFile,\r\n            progress,\r\n            message,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <label>Upload PDF Document</label>\r\n                <br></br>\r\n                {currentFile && (\r\n                    <div className=\"progress\">\r\n                        <div\r\n                        className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n                        role=\"progressbar\"\r\n                        aria-valuenow={progress}\r\n                        aria-valuemin=\"0\"\r\n                        aria-valuemax=\"100\"\r\n                        style={{ width: progress + \"%\" }}\r\n                        >\r\n                        {progress}%\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <label className=\"btn btn-default\">\r\n                    <input type=\"file\" id=\"file\" name=\"file\" accept=\"application/pdf\" required onChange={this.selectFile}></input>\r\n                </label>\r\n                <button className=\"btn btn-success\" disabled={!selectedFile} onClick={this.upload}>Upload</button>\r\n                <div className=\"alert alert-light\" role=\"alert\">\r\n                    {message}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}